var documenterSearchIndex = {"docs":
[{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Grad","category":"page"},{"location":"","page":"Home","title":"Home","text":"Sequence","category":"page"},{"location":"","page":"Home","title":"Home","text":"Phantom","category":"page"},{"location":"#Koma.Phantom","page":"Home","title":"Koma.Phantom","text":"Phantom(x,y,ρ,T2,Δw,Dλ1,Dλ2,Dθ,ux,uy)\n\nPhantom object.\n\nArguments\n\nname::String := Name of the Phantom\nx            := Spins x-coordinates.\ny            := Spins y-coordinates.\nz            := Spins z-coordinates.\nρ::Matrix    := Proton density.\nT1::Matrix   := T1 map.\nT2::Matrix   := T2 map.\nΔw::Matrix   := Off-resonace map;\nD::Matrix    := Diffusion model.\nux::Function := Displacement field x.\nuy::Function := Displacement field y.\nuz::Function := Displacement field z.\n\n\n\n\n\n","category":"type"},{"location":"","page":"Home","title":"Home","text":"Spinor","category":"page"},{"location":"","page":"Home","title":"Home","text":"Q","category":"page"},{"location":"#Koma.Q","page":"Home","title":"Koma.Q","text":"Pauly, J., Le Roux, P., Nishimura, D., & Macovski, A. (1991). Parameter relations for the Shinnar-Le Roux selective excitation pulse design algorithm (NMR imaging). IEEE Transactions on Medical Imaging, 10(1), 53–65. doi:10.1109/42.75611\n\nSpinor rotation matrix.\n\nRotation of φ with respect to the axis of rotation n=(nx,ny,nz).\n\nvarphi=-gammaDelta tsqrtleftB_1right^2+left(boldsymbolGcdotboldsymbolxright)^2=-gammaDelta tleftVert boldsymbolBrightVert\n\nboldsymboln=boldsymbolBleftVert boldsymbolBrightVert \n\n\n\n\n\n","category":"function"},{"location":"API/#Test","page":"API","title":"Test","text":"","category":"section"},{"location":"API/#Sequence","page":"API","title":"Sequence","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Modules = [Koma]\nPrivate = false\nPages   = [\"Sequence.jl\"]","category":"page"},{"location":"API/#Koma.Sequence","page":"API","title":"Koma.Sequence","text":"Sequence(GR)\n\nSequence object.\n\nArgument\n\nGR::Array{Grad,2} := Gradient array, fist axis is the dimension (x,y,z) and the second one is time.\n\nExamples\n\njulia> A = Sequence([Grad(1,1) for i=1:2,j=1:2])\nSequence(Grad[Grad(1, 1) Grad(1, 1); Grad(1, 1) Grad(1, 1)])\n\njulia> B = Sequence([Grad(2,2) for i=1:2,j=1:2])\nSequence(Grad[Grad(2, 2) Grad(2, 2); Grad(2, 2) Grad(2, 2)])\n\njulia> C = A + B\nSequence(Grad[Grad(1, 1) Grad(1, 1) Grad(2, 2) Grad(2, 2); Grad(1, 1) Grad(1, 1) Grad(2, 2) Grad(2, 2)])\n\n\n\n\n\n","category":"type"},{"location":"API/#Koma.dur-Tuple{Sequence}","page":"API","title":"Koma.dur","text":"Duration of the sequence T [s].\n\n\n\n\n\n","category":"method"},{"location":"API/#Koma.get_kspace-Tuple{Sequence}","page":"API","title":"Koma.get_kspace","text":"Outputs designed k-space trajectory from sequence object.\n\n\n\n\n\n","category":"method"},{"location":"API/#Grad","page":"API","title":"Grad","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Modules = [Koma]\nPrivate = false\nPages   = [\"Grad.jl\"]","category":"page"},{"location":"API/#Koma.Grad","page":"API","title":"Koma.Grad","text":"Grad_fun(f,T,N)\n\nGenerates arbitrary gradient waveform defined by function f in the interval t∈[0,T]. It uses N square gradients uniformly spaced in the interval.\n\nArguments\n\nf::Function := Gradient waveform.\nT::Real     := Gradient duration.\nN::Integer=1:= Number of sample points.\n\nExamples\n\njulia> Grad_fun(x-> sin(π*x),1,4)\n1×4 Array{Grad,2}:\n Grad(0.0, 0.333333)  Grad(0.866025, 0.333333)  Grad(0.866025, 0.333333)  Grad(1.22465e-16, 0.333333)\n\n\n\n\n\n","category":"type"},{"location":"API/#Koma.Grad-2","page":"API","title":"Koma.Grad","text":"Grad(A,T)\n\nGradient object.\n\nArguments\n\nA::Real := Gradient amplitude [T].\nT::Real := Gradient duration [s].\n\nExamples\n\nGrad(1,2)\n\n\n\n\n\n","category":"type"},{"location":"API/#Koma.dur-Tuple{Grad}","page":"API","title":"Koma.dur","text":"Duration T [s] of Grad datatype.\n\n\n\n\n\n","category":"method"},{"location":"API/#Koma.dur-Tuple{Vector{Grad}}","page":"API","title":"Koma.dur","text":"Duration T [s] of Vector{Grad}.\n\n\n\n\n\n","category":"method"},{"location":"API/#Koma.rotx-Tuple{Real}","page":"API","title":"Koma.rotx","text":"Rotates vector counter-clockwise with respecto to the x-axis.\n\n\n\n\n\n","category":"method"},{"location":"API/#Koma.roty-Tuple{Real}","page":"API","title":"Koma.roty","text":"Rotates vector counter-clockwise with respecto to the y-axis.\n\n\n\n\n\n","category":"method"},{"location":"API/#Koma.rotz-Tuple{Real}","page":"API","title":"Koma.rotz","text":"Rotates vector counter-clockwise with respecto to the z-axis.\n\n\n\n\n\n","category":"method"},{"location":"API/","page":"API","title":"API","text":"There should be a plot here:","category":"page"},{"location":"API/","page":"API","title":"API","text":"using Koma\ngrad = Grad(30e-3, 1e-3, .5e-3, 3e-3)","category":"page"},{"location":"API/","page":"API","title":"API","text":"seq = Sequence([grad])\np = plot_seq(seq; slider=false, height=300) \nsavefig(p,\"assets/Grad.html\"); nothing","category":"page"},{"location":"API/","page":"API","title":"API","text":"<object type=\"text/html\" data=\"../assets/Grad.html\" style=\"width:100%;height:330px;\"></object>","category":"page"},{"location":"API/","page":"API","title":"API","text":"grad2 = Grad([30,50,40].*1e-3, 1e-3, .5e-3, 1e-3)","category":"page"},{"location":"API/","page":"API","title":"API","text":"seq = Sequence([grad;grad2;;])\np = plot_seq(seq; slider=false, height=300) \nsavefig(p,\"assets/Grad2.html\"); nothing","category":"page"},{"location":"API/","page":"API","title":"API","text":"<object type=\"text/html\" data=\"../assets/Grad2.html\" style=\"width:100%;height:330px;\"></object>","category":"page"},{"location":"API/","page":"API","title":"API","text":"seq = Sequence([grad grad2 -grad -grad2 grad grad2])\np = plot_seq(seq; height=400) \nsavefig(p,\"assets/Grad3.html\"); nothing","category":"page"},{"location":"API/","page":"API","title":"API","text":"<object type=\"text/html\" data=\"../assets/Grad3.html\" style=\"width:100%;height:430px;\"></object>","category":"page"},{"location":"API/","page":"API","title":"API","text":"p = plot_M0(seq; height=400) \nsavefig(p,\"assets/Grad4.html\"); nothing","category":"page"},{"location":"API/","page":"API","title":"API","text":"<object type=\"text/html\" data=\"../assets/Grad4.html\" style=\"width:100%;height:430px;\"></object>","category":"page"},{"location":"API/#RF","page":"API","title":"RF","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Modules = [Koma]\nPrivate = false\nPages   = [\"RF.jl\"]","category":"page"},{"location":"API/#Koma.RF","page":"API","title":"Koma.RF","text":"RF Object\n\n\n\n\n\n","category":"type"},{"location":"API/#Koma.Spinor","page":"API","title":"Koma.Spinor","text":"Spinor(α,β)\n\nSpinor(α,β) with Cayley-Klein parameters α and β.\n\nBased on \"Introduction to the Shinnar-Le Roux algorithm\", Patrick Le Roux (1995).\n\nA spinor is a way to represent 3D rotations, the underlying representation is a 2 X 2 complex unitary matrix (alphabetainmathbbC):\n\nR=leftbeginarraycc\nalpha  -beta^*\nbeta  alpha^*\nendarrayright\n\nwith alpha^2+beta^2 = 1.\n\nThis later operates on the 2times2 representation of (xyz) as follows V^+ = R V R^*.\n\n\n\n\n\n","category":"type"},{"location":"API/#Koma.Q-Tuple{Any, Any, Any}","page":"API","title":"Koma.Q","text":"Pauly, J., Le Roux, P., Nishimura, D., & Macovski, A. (1991). Parameter relations for the Shinnar-Le Roux selective excitation pulse design algorithm (NMR imaging). IEEE Transactions on Medical Imaging, 10(1), 53–65. doi:10.1109/42.75611\n\nSpinor rotation matrix.\n\nRotation of φ with respect to the axis of rotation n=(nx,ny,nz).\n\nvarphi=-gammaDelta tsqrtleftB_1right^2+left(boldsymbolGcdotboldsymbolxright)^2=-gammaDelta tleftVert boldsymbolBrightVert\n\nboldsymboln=boldsymbolBleftVert boldsymbolBrightVert \n\n\n\n\n\n","category":"method"},{"location":"API/#Koma.Rx-Tuple{Any}","page":"API","title":"Koma.Rx","text":"Spinor clockwise rotation matrix with angle Θ with respect to x-axis.\n\nRx(θ) = Rz(-π/2) Ry(θ) Rz(π/2)\n\n\n\n\n\n","category":"method"},{"location":"API/#Koma.Ry-Tuple{Any}","page":"API","title":"Koma.Ry","text":"Spinor clockwise rotation matrix with angle Θ with respect to y-axis.\n\n\n\n\n\n","category":"method"},{"location":"API/#Koma.Rz-Tuple{Any}","page":"API","title":"Koma.Rz","text":"Spinor clockwise rotation matrix with angle φ with respect to z-axis.\n\n\n\n\n\n","category":"method"},{"location":"API/#Koma.dur-Tuple{Matrix{RF}}","page":"API","title":"Koma.dur","text":"Duration T [s] of the RF array Array{RF,2}.\n\n\n\n\n\n","category":"method"},{"location":"API/#Koma.dur-Tuple{RF}","page":"API","title":"Koma.dur","text":"Duration T [s] of RF datatype.\n\n\n\n\n\n","category":"method"},{"location":"API/#Koma.dur-Tuple{Vector{RF}}","page":"API","title":"Koma.dur","text":"Duration T [s] of the RF array Array{RF,1}.\n\n\n\n\n\n","category":"method"},{"location":"API/#ADC","page":"API","title":"ADC","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Modules = [Koma]\nPrivate = false\nPages   = [\"ADC.jl\"]","category":"page"},{"location":"API/#PulseDesigner","page":"API","title":"PulseDesigner","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Modules = [Koma]\nPrivate = false\nPages   = [\"PulseDesigner.jl\"]","category":"page"}]
}
